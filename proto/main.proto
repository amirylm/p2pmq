syntax = "proto3";

option go_package = "github.com/amirylm/p2pmq/proto";

package proto;


service ControlService {
    rpc Publish(PublishRequest) returns (PublishResponse); 
    rpc Subscribe(SubscribeRequest) returns (SubscribeResponse);
    rpc Unsubscribe(SubscribeRequest) returns (SubscribeResponse);
}
    
service MsgRouter { 
    rpc Listen(ListenRequest) returns (stream Message) {}
}

service ValidationRouter { 
    rpc Handle(stream ValidatedMessage) returns (stream Message) {}
}

message PublishRequest {
    string topic = 1;
    bytes data = 2;
}

message PublishResponse {
    string message_id = 1;
}

message SubscribeRequest {
    string topic = 1;
}

message SubscribeResponse {}

message ListenRequest {
    repeated string topics = 1;
    int64 max_rate = 2;
}

message Message {
    // TODO: use pubsub Message pb
    string message_id = 1;
    string topic = 2;
    bytes data = 3;
}

enum ValidationResult {
    NIL = 0;
   ACCEPT = 1; 
   IGNORE = 2;
   REJECT = 3;
}

message ValidatedMessage {
    ValidationResult result = 1;
    Message msg = 2;
}



